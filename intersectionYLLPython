# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> Optional[ListNode]:
        if(headA == None or headB == None):
            return None
    
        a = headA
        b = headB

        # if a & b have different len, then we will stop the loop after second iteration
        while( a != b):
            #for the end of first iteration, we just reset the pointer to the head of another linkedlist
            a = headB if a == None else a.next
            b = headA if b == None else b.next

        return a

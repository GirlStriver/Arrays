class Solution:
    def nextPermutation(self, nums: List[int]) -> None:
        if(nums == None or len(nums) <= 1):
            return
        
        i = len(nums) - 2
        while(i >= 0 and nums[i] >= nums[i + 1]):
            i -= 1 

        if(i >= 0):                       
            j = len(nums) - 1            
            while(nums[j] <= nums[i]):
                j -= 1      
            nums[i], nums[j] = self.swap(nums, i, j)    

        nums = self.reverse(nums, i + 1, len(nums) - 1)
        
    def swap(self, nums, i, j):
        return nums[j], nums[i]

    def reverse(self, nums, i, j) :
        while(i < j):
            nums[i], nums[j] = self.swap(nums, i, j)
            i += 1
            j -= 1
        
        return nums
        

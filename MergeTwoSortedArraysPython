class Solution:
    def merge(self, nums1: List[int], n: int, nums2: List[int], m: int) -> None:
        gap = n + m
        
        gap = self.nextGap(gap)
        while(gap > 0):
            # comparing elements in the first array.
            i = 0
            while(i + gap < n):
                if (nums1[i] > nums1[i + gap]):
                    nums1[i], nums1[i + gap] = self.swap(nums1[i], nums1[i + gap])
                i += 1

            # comparing elements in both arrays.
            j = gap - n if gap > n else 0
            while(i < n and j < m):
                if (nums1[i] > nums2[j]):
                    nums1[i], nums2[j] = self.swap(nums1[i], nums2[j])

                i += 1
                j += 1

            if (j < m):
                # comparing elements in the second array.
                j = 0
                while (j + gap < m):
                    if (nums2[j] > nums2[j + gap]):
                        nums2[j], nums2[j + gap] = self.swap(nums2[j], nums2[j + gap])

                    j += 1
                    
            gap = self.nextGap(gap)
            
        for i in range(m):
            nums1[n + i] = nums2[i]
                    
    def nextGap(self, gap):
        if (gap <= 1):
            return 0
        return (gap // 2) + (gap % 2)
 
    def swap(self, i, j):
        return j, i
